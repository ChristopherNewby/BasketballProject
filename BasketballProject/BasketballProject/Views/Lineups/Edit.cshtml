@model BasketballProject.Lineup

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Lineup</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LineupID)

        <div class="form-group">
            @Html.LabelFor(model => model.Player1, "Player1", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player1", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player2, "Player2", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player2", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player3, "Player3", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player3", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player4, "Player4", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player4", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player5, "Player5", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player5", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player5, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player6, "Player6", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player6", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player6, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player7, "Player7", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player7", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player7, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player8, "Player8", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player8", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player8, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Player9, "Player9", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Player9", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Player9, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
